{"version":3,"sources":["shared/index.js","shared/context.js","shared/scan-config.js","images/chocapic_cereal.jpg","images/kellogs_cornflakes.jpg","images/nestle_cornflakes.png","images/nestle2_cornflakes.jpg","products/ProductsBarcodes.js","products/Products.js","images/nesquik.jpg","images/coca-cola.jpg","images/coca-cola-zero.jpg","images/sprite.jpg","images/philips.jpeg","components/ScanPage.jsx","shared/typography.js","components/Item.jsx","components/AlternativeProducts.jsx","components/AdditionalProductInfo.jsx","components/ResultsPage.jsx","components/HomeFooter.jsx","AppContent.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Colors","Typography","Mixins","Breakpoints","Sizes","ResultsContext","createContext","Settings","licenceKey","engineLocation","scanSettings","enabledSymbologies","Barcode","Symbology","EAN8","EAN13","UPCE","UPCA","codeDuplicateFilter","barcodePicker","playSoundOnScan","vibrateOnScan","guiStyle","videoFit","BarcodePicker","ObjectFit","COVER","cameraSettings","resolutionPreference","CameraSettings","ResolutionPreference","FULL_HD","enableCameraSwitcher","getScanSettings","ScanSettings","kellogsBarcode","nestle1Barcode","nestle2Barcode","nesquikBarcode","chocapicBarcode","colaBarcode","colazeroBarcode","spriteBarcode","philipsBarcode","listOfProducts","id","itemCategory","itemType","image","kellogs","name","numberOfItems","shippingDays","code","description","chocapic","nestle1","nestle2","ScanPage","useState","ready","setReady","result","setResult","history","useHistory","useContext","productData","setProductData","useEffect","console","log","barcode","barcodes","correctItem","filter","product","data","push","ScanContent","licenseKey","onReady","onScan","scanResult","onScanError","err","error","onScannerInitialized","paused","accessCamera","styled","div","Item","props","Container","UpperSection","Image","src","alt","Info","NormalText","Title","LabelContainer","InnerLabelContainer","Label","LowerSection","LinkButton","to","img","Link","p","AlternativeProducts","items","map","item","AdditionalProductInfo","target","rel","href","process","InstructionIcon","WarrantyIcon","a","MenuBookIcon","BuildIcon","ResultsPage","useParams","singleItem","toString","alternativeItems","Header","SquareButton","info","Footer","ReOrderButton","onClick","alert","mediumGrey","InfoLink","black","homeParams","title","scanText","scanLink","AppContent","Provider","value","exact","path","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c8da1df0.chunk.js","sourcesContent":["import { Typography } from '@scandit/react-toolkit';\r\n\r\nexport * from './scan-config';\r\nexport * from './context';\r\nexport * from './parse-data';\r\n\r\nexport const { Colors, Mixins, Breakpoints, Sizes } = Typography;\r\n","import { createContext } from 'react';\r\n\r\nexport const ResultsContext = createContext(null);\r\n","import {\r\n  Barcode,\r\n  BarcodePicker,\r\n  CameraSettings,\r\n  ScanSettings,\r\n} from 'scandit-sdk';\r\n\r\nexport const Settings = {\r\n  licenceKey: 'Af2gi2iGSOjXI1dqRDYfczUd1ZiIEBgRlXgXePtF4qH+SFrCMk+C3GdNQhYmQ4kvnGbrIyB0m1o9IGFpgmC9Afhf2fXXQDwa1G1bOdwLMWSuF/7MhBvknkw4jTekK5M6wpknVpwZA2lv5KDrAzahYf9M4nDpE9g93ukemd+z5H3j4q3WiUjJVJ1vQn6x+CV+tHgF1aXQsu374SH/KE3FANzgoT3HvbuOxahX8Nt7weawtclgKleSSGG186Te+UpwYxV0iJVMw7H7M1KttvdnzdN6tzzFbxB+1C7qBjpYnXOoVtZXB7r15lYQISMRG2Ifha/b7P2HfaPRY/nkkFn4hy8pCxGMyVIfTx4Mn8IigvfkNkU1fYH8BwmmFcspTs89ArqKSBxjyt4eFUaavGocC+SuunkLMHrDz3YOEB3FbF04NDkJBPzxhK7X0MLU9kyH/FHaccM5bVuAHhDfKhpIjVnZI+uNYKN0CavHsIlVx5soMS7U+uu/j+jkA+18SjHvnoKHzdcQrkVfVhxQUuwcdudIbdXJovPf83Mu2Y/0Lz7AsZRIsPfKG2OCHjlmubrKIn4P/86WvxGozLthV8r7G+7f2nCX4ldbDvU2cHaJbrzUMosu75Wed+VH6Nr4c3zRejkPtBDjUcudUbL79TrOMa2l7V2a4TBDnXPsYEomKMVwAippaLZyu/rhldl+Q2i9RRbZhQJwIkb0CNGEyU1rl235997u99Welw12aTd79hpbFnWxaSbjfh4MChUNSVmcLktK5kw0MiPswC9ax4aYNC1r1pYJ4sUSsVE0wX/Y',\r\n  engineLocation: 'https://cdn.jsdelivr.net/npm/scandit-sdk@4.x/build',\r\n\r\n  scanSettings: {\r\n    enabledSymbologies: [\r\n      Barcode.Symbology.EAN8,\r\n      Barcode.Symbology.EAN13,\r\n      Barcode.Symbology.UPCE,\r\n      Barcode.Symbology.UPCA\r\n    ],\r\n    codeDuplicateFilter: 2000,\r\n  },\r\n\r\n  barcodePicker: {\r\n    playSoundOnScan: true,\r\n    vibrateOnScan: true,\r\n    guiStyle: 'none',\r\n    videoFit: BarcodePicker.ObjectFit.COVER,\r\n    cameraSettings: {\r\n      resolutionPreference: CameraSettings.ResolutionPreference.FULL_HD\r\n    },\r\n    enableCameraSwitcher: false,\r\n  },\r\n};\r\n\r\nexport const getScanSettings = () => new ScanSettings({ ...Settings.scanSettings });\r\n","export default __webpack_public_path__ + \"static/media/chocapic_cereal.0e73474c.jpg\";","export default __webpack_public_path__ + \"static/media/kellogs_cornflakes.19b69115.jpg\";","export default __webpack_public_path__ + \"static/media/nestle_cornflakes.8d23114d.png\";","export default __webpack_public_path__ + \"static/media/nestle2_cornflakes.16a8528d.jpg\";","export const kellogsBarcode = '1112200231005';\r\nexport const nestle1Barcode = '1114400444209';\r\nexport const nestle2Barcode = '2214400444205';\r\nexport const nesquikBarcode = '69000225';\r\nexport const chocapicBarcode = '99144005';\r\nexport const colaBarcode = '0001210077653';\r\nexport const colazeroBarcode = '0991210077657';\r\nexport const spriteBarcode = '0551277777657';\r\nexport const philipsBarcode = '09990122';\r\n","import chocapic from '../images/chocapic_cereal.jpg';\r\nimport kellogs from '../images/kellogs_cornflakes.jpg';\r\nimport nestle1 from '../images/nestle_cornflakes.png';\r\nimport nestle2 from '../images/nestle2_cornflakes.jpg';\r\nimport nesquik from '../images/nesquik.jpg';\r\nimport cola from '../images/coca-cola.jpg';\r\nimport colazero from '../images/coca-cola-zero.jpg';\r\nimport sprite from '../images/sprite.jpg';\r\nimport philips from '../images/philips.jpeg';\r\n\r\nimport {\r\n  kellogsBarcode,\r\n  philipsBarcode,\r\n  chocapicBarcode,\r\n  nestle1Barcode,\r\n  nestle2Barcode,\r\n  nesquikBarcode,\r\n  colaBarcode,\r\n  colazeroBarcode,\r\n  spriteBarcode,\r\n} from './ProductsBarcodes';\r\n\r\nexport const listOfProducts = [\r\n  {\r\n    id: kellogsBarcode,\r\n    itemCategory: 'food',\r\n    itemType: 'consumer',\r\n    image: kellogs,\r\n    name: 'kellogs corn flakes',\r\n    numberOfItems: 12,\r\n    shippingDays: 7,\r\n    code: kellogsBarcode,\r\n    description: 'Kelloggs Corn Flakes® cereal is the Original & Best® cereal.Every bite of these crispy, golden flakes is just as delicious as the first. Youll be on your way to a great day when you poura bowl of Kelloggs Corn Flakes® cereal into your breakfast bowl.'\r\n  },\r\n  {\r\n    id: chocapicBarcode,\r\n    itemCategory: 'food',\r\n    itemType: 'consumer',\r\n    image: chocapic,\r\n    name: 'chocapic cereal',\r\n    numberOfItems: 66,\r\n    shippingDays: 2,\r\n    code: chocapicBarcode,\r\n    description: 'Chocapic is a chocolate-flavoured whole-grain breakfast cereal distributed by Nestlé in most of Europe, the Middle-East and Latin America. The cereal consists of wheat flakes covered in chocolate'\r\n  },\r\n  {\r\n    id: nesquikBarcode,\r\n    itemCategory: 'food',\r\n    itemType: 'consumer',\r\n    image: nesquik,\r\n    name: 'nesquik cerral',\r\n    numberOfItems: 123,\r\n    shippingDays: 10,\r\n    code: nesquikBarcode,\r\n    description: 'Nesquik Cereal was first introduced in the US in 1999. The cereal consists of small, 1 centimetre spheres of chocolate cereal. Nesquik Cereal is most similar to General Mills Cocoa Puffs'\r\n  },\r\n  {\r\n    id: nestle1Barcode,\r\n    itemCategory: 'food',\r\n    itemType: 'consumer',\r\n    image: nestle1,\r\n    name: 'nestle corn flakes',\r\n    numberOfItems: 123,\r\n    shippingDays: 10,\r\n    code: nestle1Barcode,\r\n    description: 'Tear into a box of Nestle Corn Flakes and discover the simple WHOLE GRAIN goodness within. Theres nothing quite like a bowl of delicious, crispy flakes of golden corn with a splash of milk to get the day started. It also contains essential vitamins and minerals, including calcium and iron.'\r\n  },\r\n  {\r\n    id: nestle2Barcode,\r\n    itemCategory: 'food',\r\n    itemType: 'consumer',\r\n    image: nestle2,\r\n    name: 'nestle corn flakes honey and nut',\r\n    numberOfItems: 123,\r\n    shippingDays: 10,\r\n    code: nestle2Barcode,\r\n    description: 'With Nestlé Honey Gold Flakes you’ll be serving up a delicious treat of crispy flakes made from golden corn, lightly coated with the rich taste of honey.'\r\n  },\r\n  {\r\n    id: colaBarcode,\r\n    itemCategory: 'drink',\r\n    itemType: 'consumer',\r\n    image: cola,\r\n    name: 'coca-cola',\r\n    numberOfItems: 1337,\r\n    shippingDays: 10,\r\n    code: colaBarcode,\r\n    description: 'Coca-Cola, or Coke, is a carbonated soft drink manufactured by The Coca-Cola Company. Originally marketed as a temperance drink and intended as a patent medicine, it was invented in the late 19th century by John Stith Pemberton and was bought out by businessman Asa Griggs Candler, whose marketing tactics led Coca-Cola to its dominance of the world soft-drink market throughout the 20th century.'\r\n  },\r\n  {\r\n    id: colazeroBarcode,\r\n    itemCategory: 'drink',\r\n    itemType: 'consumer',\r\n    image: colazero,\r\n    name: 'coca-cola zero',\r\n    numberOfItems: 123,\r\n    shippingDays: 10,\r\n    code: colazeroBarcode,\r\n    description: 'Coca-Cola No Sugar, in some markets called Coca-Cola Zero Sugar, is a new recipe being introduced around the world. It has an improved taste that is even closer to the great taste of Coca-Cola, but without the sugar.'\r\n  },\r\n  {\r\n    id: spriteBarcode,\r\n    itemCategory: 'drink',\r\n    itemType: 'consumer',\r\n    image: sprite,\r\n    name: 'sprite',\r\n    numberOfItems: 2,\r\n    shippingDays: 30,\r\n    code: spriteBarcode,\r\n    description: 'Sprite is a lemon-lime flavored soft drink with a crisp, clean taste that gives you the ultimate cut-through refreshment. Sprite is a lemon-lime flavored soft drink with a crisp, clean taste that gives you the ultimate cut-through refreshment.',\r\n  },\r\n  {\r\n    id: philipsBarcode,\r\n    itemCategory: 'lights',\r\n    itemType: 'industrial',\r\n    image: philips,\r\n    name: 'Philips 472399 - 16W LED A21 Dimmable Soft White Light Bulb',\r\n    numberOfItems: 123,\r\n    shippingDays: 10,\r\n    code: philipsBarcode,\r\n    description: 'Philips A21 LED light bulbs with Warm Glow Effect provide 1600 lumens of soft white light, equivalent to 100-Watt incandescents with 80% less energy use'\r\n  }\r\n];\r\n","export default __webpack_public_path__ + \"static/media/nesquik.635452d1.jpg\";","export default __webpack_public_path__ + \"static/media/coca-cola.7a885a8b.jpg\";","export default __webpack_public_path__ + \"static/media/coca-cola-zero.66e3b485.jpg\";","export default __webpack_public_path__ + \"static/media/sprite.99188cbc.jpg\";","export default __webpack_public_path__ + \"static/media/philips.ab301ca2.jpeg\";","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport ScanditBarcodeScanner from 'scandit-sdk-react';\r\n\r\nimport { ScanningBy } from '@scandit/react-toolkit';\r\n\r\nimport {\r\n  Settings,\r\n  getScanSettings,\r\n  ResultsContext,\r\n} from '../shared';\r\n\r\nimport { listOfProducts } from '../products/Products';\r\n\r\nexport function ScanPage() {\r\n  const scanSettings = getScanSettings();\r\n\r\n  const [ready, setReady] = useState();\r\n  const [result, setResult] = useState();\r\n  // const [scanError, setScanError] = useState(null);\r\n\r\n  const history = useHistory();\r\n  const { productData, setProductData } = useContext(ResultsContext);\r\n\r\n  useEffect(() => {\r\n    console.log('result in [ScanPage.jsx] is...', result);\r\n    const barcode = result && result.barcodes && result.barcodes[0];\r\n    console.log('barcode is bool or normal obj?', barcode);\r\n    if (!barcode) { return; }\r\n\r\n    if (barcode) {\r\n      console.log('xxxx listOfProducts in [ScanPage.jsx] is ...', listOfProducts);\r\n      const correctItem = listOfProducts.filter(product => product.id === barcode.data);\r\n      console.log('correct item = ', correctItem);\r\n      setProductData(listOfProducts);\r\n      history.push(`/result/${correctItem[0].id}`);\r\n      /* czy tutaj object barcode moge prekazac dalej?\r\n      jakims fetchem czy exportem? np do productsbarcode albo products? */\r\n    }\r\n  }, [result]);\r\n\r\n  useEffect(() => {\r\n    // console.log('data is...', productData);\r\n  }, [productData]);\r\n\r\n  const onScan = (scanResult) => {\r\n    console.log('scanResult in [ScanPage.jsx]', scanResult);\r\n    console.log('ready in [ScanPage.jsx]', ready);\r\n    setResult(scanResult);\r\n  };\r\n\r\n  const onScanError = err => console.error('Scan error:', err);\r\n  return (\r\n    <ScanContent>\r\n      <ScanditBarcodeScanner\r\n        {...Settings.barcodePicker}\r\n        licenseKey={Settings.licenceKey} // done\r\n        engineLocation={Settings.engineLocation} // done\r\n        onReady={() => setReady(true)} // done\r\n        onScan={onScan}\r\n        onScanError={onScanError}\r\n        onScannerInitialized={console.log}\r\n        scanSettings={scanSettings}\r\n        paused={false}\r\n        accessCamera\r\n        guiStyle=\"laser\" // done\r\n      />\r\n      <ScanningBy />\r\n    </ScanContent>\r\n  );\r\n}\r\n\r\nconst ScanContent = styled.div`\r\n  .scandit-logo {\r\n    display: none;\r\n  }\r\n\r\n  transition: opacity 0.3s;\r\n  opacity: 1;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n","export const Colors = {\r\n  backgroundLighter: '#f0f0f0',\r\n  backgroundLight: '#F7F7F7',\r\n  backgroundDarker: '#d8d8d8',\r\n  backgroundDark: '#1b2026',\r\n\r\n  white: '#ffffff',\r\n  black: '#000000',\r\n\r\n  titleColor: '#2E2E2E',\r\n  dividerColor: '#EFEFEF',\r\n  disabledButton: '#cccccc',\r\n\r\n  mediumGrey: '#707070',\r\n  darkGrey: '#2E2E2E',\r\n  lightGrey: '#AAAAAA',\r\n  lightGrey2: '#E5E5E5',\r\n\r\n  low: '#26D381',\r\n  moderate: '#FFD034',\r\n  high: '#FF1438',\r\n\r\n  nova_1: '#00aa00',\r\n  nova_2: '#ffcc00',\r\n  nova_3: '#ff6600',\r\n  nova_4: '#ff0000',\r\n\r\n  linkColor: '#00818E',\r\n  infoColor: '#6E6E6E',\r\n};\r\n\r\nexport const Sizes = {\r\n  breakpoint: '500px',\r\n\r\n  maxWidth: '500px',\r\n  desktopMaxWidth: '400px',\r\n  maxHeight: '720px',\r\n\r\n  topBarHeight: '60px',\r\n  scanningTopBarHeight: '60px',\r\n\r\n  dialogMargin: '32px',\r\n  desktopDialogMargin: '180px',\r\n\r\n  contentMargin: '60px',\r\n};\r\n\r\nexport const Breakpoints = {\r\n  max: 'max-width: 500px',\r\n  min: 'min-width: 501px',\r\n};\r\n\r\nexport const Mixins = {\r\n  flexCenter: `\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  `,\r\n\r\n  helvetica: `\r\n    font-family: \"Helvetica\", sans-serif;\r\n  `,\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { Colors, Mixins } from '../shared/typography';\r\n\r\nfunction Item(props) {\r\n  const {\r\n    numberOfItems,\r\n    name,\r\n    shippingDays,\r\n    code,\r\n    image,\r\n    id\r\n  } = props;\r\n\r\n  return (\r\n    <Container>\r\n      <UpperSection>\r\n        <Image src={image} alt=\"replacement\" />\r\n        <Info>\r\n          <NormalText>\r\n            {numberOfItems}\r\n            Items in Stock\r\n          </NormalText>\r\n          <Title>{name}</Title>\r\n          <LabelContainer>\r\n            <InnerLabelContainer>\r\n              <Label>Shipping</Label>\r\n              <NormalText>\r\n                {shippingDays}\r\n                bussines days\r\n              </NormalText>\r\n            </InnerLabelContainer>\r\n            <InnerLabelContainer>\r\n              <Label>EAN/UPC</Label>\r\n              <NormalText>{code}</NormalText>\r\n            </InnerLabelContainer>\r\n          </LabelContainer>\r\n        </Info>\r\n      </UpperSection>\r\n      <LowerSection>\r\n        <LinkButton to={`/result/${id}`}>View Product</LinkButton>\r\n      </LowerSection>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n\r\nconst Container = styled.div`\r\n  ${Mixins.helvetica};\r\n  background-color: ${Colors.backgroundLighter};\r\n  padding: 0px 15px 0px 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  margin-top: 5px;\r\n  border: 1px solid ${Colors.backgroundLight};\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst UpperSection = styled.div`\r\n  padding: 20px 0px 0px 0px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  justify-content: end;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 90px;\r\n  height: 90px;\r\n  justify-content: start;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst LinkButton = styled(Link)`\r\n  ${Mixins.helvetica};\r\n  text-decoration: none !important;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst NormalText = styled.p`\r\n  margin: 0px;\r\n  font-size: 12px;\r\n  padding-bottom: 5px;\r\n  line-height: 20px;\r\n  color: ${Colors.lightGrey};\r\n`;\r\n\r\nconst Title = styled.p`\r\n  ${Mixins.helvetica}\r\n  margin: 0px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  padding: 0px 0px 5px 0px;\r\n  color: ${Colors.black};\r\n`;\r\n\r\nconst Label = styled.p`\r\n  margin: 0px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  padding-top: 10px;\r\n`;\r\n\r\nconst LabelContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst InnerLabelContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst LowerSection = styled.div`\r\n  display:flex;\r\n  flex-direction: column;\r\n  box-sizing: border-box;\r\n  align-self: center;\r\n`;\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport Item from './Item';\r\n\r\nexport function AlternativeProducts({ items }) {\r\n  return (\r\n    <Container>\r\n      <Label>Alternative Products</Label>\r\n      {items.map(item => <Item key={item.id} {...item} />)}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Label = styled.p`\r\n  margin: 0px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  padding-top: 10px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: scroll; \r\n  height: 280px;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport { Colors, Mixins } from '../shared/typography';\r\n\r\nexport function AdditionalProductInfo() {\r\n  return (\r\n    <div>\r\n      <Label> Additional Product Information </Label>\r\n      <Link target=\"_blank\" rel=\"noreferrer\" href={`${process.env.PUBLIC_URL}/instruction_pdf.pdf`}>\r\n        <InstructionIcon>\r\n          <BuildIcon />\r\n        </InstructionIcon>\r\n        Instruction\r\n      </Link>\r\n      <Link target=\"_blank\" rel=\"noreferrer\" href={`${process.env.PUBLIC_URL}/warranty_pdf.pdf`}>\r\n        <WarrantyIcon>\r\n          <MenuBookIcon />\r\n        </WarrantyIcon>\r\n        Warranty\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\nconst Label = styled.p`\r\n  margin: 0px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  padding-top: 10px;\r\n`;\r\n\r\nconst Link = styled.a`\r\n  width: 100%;\r\n  display: grid;\r\n  background-color: ${Colors.backgroundLighter};\r\n  grid-template-columns: 1fr 5fr;\r\n  height: 40px;\r\n  ${Mixins.helvetica};\r\n  margin-top: 5px;\r\n  padding: 5px;\r\n  line-height: 35px;\r\n  border-radius: 5px;\r\n  color: ${Colors.backgroundDark};\r\n`;\r\n\r\nconst InstructionIcon = styled(MenuBookIcon)`\r\n  color: ${Colors.backgroundDark};\r\n  padding:5px\r\n`;\r\n\r\nconst WarrantyIcon = styled(BuildIcon)`\r\n  color: ${Colors.backgroundDark};\r\n  padding:5px\r\n`;\r\n","/* eslint eqeqeq: [\"error\", \"smart\"] */\r\n\r\nimport React, { useContext } from 'react';\r\n\r\nimport styled from 'styled-components';\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\nimport { AlternativeProducts } from './AlternativeProducts';\r\nimport { AdditionalProductInfo } from './AdditionalProductInfo';\r\n\r\nimport { ResultsContext } from '../shared/context';\r\nimport { Colors, Mixins } from '../shared/typography';\r\n\r\nexport function ResultsPage() {\r\n  const { productData } = useContext(ResultsContext);\r\n  console.log('productData in [ResultsPage.jsx] is ...', productData);\r\n  const { id } = useParams();\r\n  console.log('what is type of id', typeof id);\r\n  console.log('info ktore mnie interere czyli czym jest ten param', id);\r\n\r\n  const singleItem = productData.filter(product => product.id.toString() === id);\r\n  console.log('single item array ktore filtruje', singleItem);\r\n\r\n  const {\r\n    numberOfItems,\r\n    name,\r\n    shippingDays,\r\n    code,\r\n    description,\r\n    image,\r\n    itemType,\r\n    itemCategory\r\n  } = singleItem[0];\r\n\r\n  // console.log('czym jest product data id', productData[id].id);\r\n  const alternativeItems = productData.filter(item => item.itemCategory === itemCategory &&\r\n     item.id !== singleItem[0].id);\r\n  // console.log('konkretny item w [ResultsPage.jsx] is ...', productData[id]);\r\n  console.log('alternativeItems item w [ResultsPage.jsx] is ...', alternativeItems);\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <LinkButton to=\"/scan-consumer-product\">\r\n          <SquareButton />\r\n          <NormalText>Scan again</NormalText>\r\n        </LinkButton>\r\n      </Header>\r\n      <UpperSection>\r\n        <Image src={image} />\r\n        <Info>\r\n          <NormalText>\r\n            {numberOfItems}\r\n            Items in Stock\r\n          </NormalText>\r\n          <Title>{name}</Title>\r\n          <LabelContainer>\r\n            <InnerLabelContainer>\r\n              <Label>Shipping</Label>\r\n              <NormalText>\r\n                {shippingDays}\r\n                bussines days\r\n              </NormalText>\r\n            </InnerLabelContainer>\r\n            <InnerLabelContainer>\r\n              <Label>EAN/UPC</Label>\r\n              <NormalText>{code}</NormalText>\r\n            </InnerLabelContainer>\r\n          </LabelContainer>\r\n        </Info>\r\n\r\n      </UpperSection>\r\n      <LowerSection>\r\n        <Label>Product Description</Label>\r\n        <NormalText>{description}</NormalText>\r\n        {itemType === 'consumer' && <AlternativeProducts items={alternativeItems} />}\r\n        {itemType === 'industrial' && <AdditionalProductInfo info={singleItem[0]} />}\r\n      </LowerSection>\r\n      <Footer>\r\n        <ReOrderButton onClick={() => alert(`item ${name} has been re-ordered`)}>\r\n          <LinkButton to=\"/\">\r\n            Re-order Item\r\n          </LinkButton>\r\n        </ReOrderButton>\r\n      </Footer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Header = styled.div`\r\n  display:flex;\r\n  flex-direction: row;\r\n  border-bottom: 1px solid ${Colors.black}\r\n`;\r\n\r\nconst Container = styled.div`\r\n  ${Mixins.helvetica};\r\n  padding: 20px 15px 0px 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst UpperSection = styled.div`\r\n  padding: 20px 0px 0px 0px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst SquareButton = styled.div`\r\n  height: 20px;\r\n  width: 20px;\r\n  background: ${Colors.darkGrey};\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst LowerSection = styled.div`\r\n  display:flex;\r\n  flex-direction: column;\r\n  box-sizing: border-box;\r\n  height: 600px;\r\n  margin-bottom: 20px;\r\n  \r\n`;\r\n\r\nconst Info = styled.div`\r\n  justify-content: end;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 120px;\r\n  height: 120px;\r\n  justify-content: start;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst LinkButton = styled(Link)`\r\n  ${Mixins.helvetica};\r\n  text-decoration: none !important;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst NormalText = styled.p`\r\n  margin: 0px;\r\n  font-size: 12px;\r\n  padding: 5px 0px 5px 0px;\r\n  line-height: 20px;\r\n  color: ${Colors.lightGrey};\r\n`;\r\n\r\nconst Title = styled.p`\r\n  ${Mixins.helvetica}\r\n  margin: 0px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  padding: 0px 0px 5px 0px;\r\n  color: ${Colors.black};\r\n`;\r\n\r\nconst Label = styled.p`\r\n  margin: 0px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  padding-top: 10px;\r\n`;\r\n\r\nconst LabelContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst InnerLabelContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst ReOrderButton = styled.a`\r\n  width: 60%;\r\n  background-color: ${Colors.backgroundDark};\r\n  height: 40px;\r\n  ${Mixins.helvetica};\r\n  margin-top: 5px;\r\n  padding: 5px;\r\n  line-height: 35px;\r\n  color: ${Colors.lightGrey2};\r\n  text-align: center;\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  border-top: 1px solid black;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Colors } from '../shared';\r\n\r\nexport function HomeFooter() {\r\n  return (\r\n    <Info>\r\n      Learn more on\r\n      <InfoLink target=\"_blank\" rel=\"noopener\" href=\"https://scandit.com\"> scandit.com</InfoLink>\r\n      <br />\r\n      <InfoLink target=\"_blank\" rel=\"noreferrer\" href={`${process.env.PUBLIC_URL}/allbarcodes_pdf.pdf`}>Download </InfoLink>\r\n      barcode smaples\r\n    </Info>\r\n  );\r\n}\r\n\r\nconst Info = styled.div`\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: ${Colors.mediumGrey};\r\n  font-size: 14px;\r\n  line-height: 21px;\r\n  letter-spacing: 0px;\r\n`;\r\n\r\nconst InfoLink = styled.a`\r\n  color: ${Colors.mediumGrey};\r\n  font-size: 14px;\r\n  line-height: 21px;\r\n  text-decoration: underline;\r\n  letter-spacing: 0px;\r\n\r\n  &:visited {\r\n    color: ${Colors.mediumGrey};\r\n  }\r\n\r\n  &:hover {\r\n    color: ${Colors.black};\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport { Layout, HomePage } from '@scandit/react-toolkit';\r\nimport { ScanPage } from './components/ScanPage';\r\nimport { ResultsPage } from './components/ResultsPage';\r\nimport { HomeFooter as Footer } from './components/HomeFooter';\r\nimport { ResultsContext } from './shared/context';\r\n\r\nconst homeParams = {\r\n  title: 'Re-ordering consumer/industrial products Scanning Demo',\r\n  description: 'Scan the barcode of an item to show product information and re-order',\r\n  scanText: 'Start Scanning',\r\n  scanLink: '/scan-consumer-product',\r\n  Footer\r\n};\r\n\r\nfunction AppContent() {\r\n  const [productData, setProductData] = useState(null);\r\n  useEffect(() => {\r\n  }, [productData]);\r\n\r\n  return (\r\n    <ResultsContext.Provider value={{ productData, setProductData }}>\r\n      <Layout>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <HomePage {...homeParams} />\r\n          </Route>\r\n          <Route path=\"/home\">\r\n            <HomePage {...homeParams} />\r\n          </Route>\r\n          <Route path=\"/scan-consumer-product\">\r\n            <ScanPage />\r\n          </Route>\r\n          <Route path=\"/result/:id\">\r\n            <ResultsPage />\r\n          </Route>\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Layout>\r\n    </ResultsContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AppContent;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport AppContent from './AppContent';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <AppContent />\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}