{"version":3,"sources":["services/functions.js","db/Languages.js","components/HomePage/HomePage.jsx","db/RiddleDB.js","components/Game/ScoreBoard/ScoreBoard.jsx","components/Game/Timer/Timer.jsx","components/Game/SingleRiddle/SingleRiddle.jsx","components/Game/RiddleList/RiddleList.jsx","components/Game/Lives/Lives.jsx","components/Game/Counter/Counter.jsx","components/Game/UserAnswer/UserAnswer.jsx","components/Game/RiddleContent/RiddleContent.jsx","components/Game/ProgressBar/ProgressBar.jsx","components/Game/Game.jsx","components/Reward/Canvas.jsx","components/Reward/Reward.jsx","components/GameOver/GameOver.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["operators","createRandomNumber","number","Math","floor","random","createRandomOperator","length","en","title","subtitle","instruction","startButton","coinsCollected","playerScore","progressBar","timer","altRiddleText","showRiddleListButton","hideRiddleListButton","checkAnswerButton","playerWonText1","playerWonText2","claimCoinsButton","gameOver","tryAgainButton","pl","cn","HomePage","language","setLanguage","console","log","languages","className","onClick","to","id","uuidv4","level","value","content","completed","points","price","ScoreBoard","props","userScore","Timer","time","lastSeconds","SingleRiddle","setSelectedRiddle","selectedRiddle","setTimerStart","currentCoins","tabIndex","role","itemID","choosenRiddle","db","filter","singleRiddle","handleClick","onKeyDown","event","RiddleList","riddleListData","setTimerPaused","unfinishedRiddles","riddle","map","riddleFromDB","key","Lives","userLives","livesNumberArrayForm","Array","fill","Counter","index","answer","setAnswer","type","x","i","UserAnswer","inputNumber","from","String","Number","useEffect","style","fontSize","RiddleContent","ProgressBar","width","Game","coins","defaulRiddleState","useState","setScore","setUserLives","timerStart","setTime","riddleListVisible","setRiddleListVisibility","List","setRiddleListData","history","useHistory","showRiddleList","document","getElementsByClassName","marginLeft","hideRiddleList","checkAnswer","userAnswer","join","interval","setInterval","clearInterval","push","Canvas","coinReward","setCoins","coinStatus","canvasRef","useRef","claimReward","draw","e","context","buttons","which","beginPath","clearRect","offsetX","offsetY","stroke","canvas","current","ctx","getContext","addEventListener","fillStyle","fillRect","ref","height","Reward","setNumber","GameOver","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fd69650e.chunk.js","sourcesContent":["const operators = [\r\n  '*',\r\n  '+',\r\n  '-',\r\n  '/',\r\n];\r\n\r\nexport const createRandomNumber = (number) => Math.floor(Math.random() * number);\r\nexport const createRandomOperator = () => operators[Math.floor(Math.random() * operators.length)];\r\n\r\nexport const parseArrayToString = (arr) => arr.toString().replaceAll(',', '');\r\nexport const parseArrayToNumber = (arr) => Number(arr.join(''));\r\nexport const parseNumberToArray = (number) => Array.from(String(number), Number);\r\n","export default {\r\n  en: {\r\n    title: 'Welcome to Riddle World',\r\n    subtitle: 'How to play the game?',\r\n    instruction: 'Its super easy, click button below to start. After that you will get a chance to pick a riddle, each gives you different amount of points and +10 seconds to solve other riddles. When you score 1000 points you get a reward! You got 3 lives and 20 seconds at start. Collect Coins to unlock more challanges!',\r\n    startButton: 'Click to start a game',\r\n\r\n    coinsCollected: 'coins collected',\r\n    playerScore: 'player score',\r\n    progressBar: 'progress bar',\r\n    timer: 'time left',\r\n    altRiddleText: 'choose riddle from riddle list',\r\n    showRiddleListButton: 'show riddle list',\r\n    hideRiddleListButton: 'hide riddle list',\r\n    checkAnswerButton: 'check answer',\r\n\r\n    playerWonText1: 'You won congrats!',\r\n    playerWonText2: 'scratch card to see your reward',\r\n    claimCoinsButton: 'Claim coins',\r\n\r\n    gameOver: 'Game over!',\r\n    tryAgainButton: 'Try again',\r\n  },\r\n  pl: {\r\n    title: 'Witaj w świecie zagadek',\r\n    subtitle: 'Jak grać?',\r\n    instruction: 'To bardzo proste, po kliknięciu przycisku poniżej otrzymasz szanse na wybór zagadadki którą musisz rozwiązać, za każdą poprawnie rozwiązaną zagadke otzymujesz konkretną ilość punktów oraz dodatkowe 10 sekund na rozwiązywanie kolejnych łamigłówek. Na starcie otrzymujesz 3 życia oraz 20 sekund. Zbieraj monety aby odblokowywac więksą pulę zagadek',\r\n    startButton: 'Kliknij aby rozpocząć',\r\n\r\n    coinsCollected: 'zebrane monety',\r\n    playerScore: 'wynik gracza',\r\n    progressBar: 'pasek postępu',\r\n    timer: 'pozostało sekund',\r\n    altRiddleText: 'wybierz łamigłówkę z listy zagadek',\r\n    showRiddleListButton: 'pokaż listę',\r\n    hideRiddleListButton: 'ukryj listę',\r\n    checkAnswerButton: 'sprawdź odpowiedź',\r\n\r\n    playerWonText1: 'Wygrałeś gratulacje!',\r\n    playerWonText2: 'zdrap zdrapke i zobacz co wygrałeś!',\r\n    claimCoinsButton: 'Odbierz nagrode',\r\n\r\n    gameOver: 'Koniec gry!',\r\n    tryAgainButton: 'Spróbuj ponownie',\r\n  },\r\n  cn: {\r\n    title: '欢迎来到谜语世界',\r\n    subtitle: '如何玩游戏?',\r\n    instruction: '它超级简单，点击下面的按钮开始。 之后，您将有机会选择一个谜语，每个谜语都会给您不同的分数和 +10 秒来解决其他谜语。 当您获得 1000 分时，您将获得奖励！ 开始时你有 3 条生命和 20 秒。 收集硬币以解锁更多挑战！',\r\n    startButton: '点击开始游戏',\r\n\r\n    coinsCollected: '收集到的硬币',\r\n    playerScore: '球员得分',\r\n    progressBar: '进度条',\r\n    timer: '剩下的时间',\r\n    altRiddleText: '从谜语列表中选择谜语',\r\n    showRiddleListButton: '显示谜语列表',\r\n    hideRiddleListButton: '隐藏谜语列表',\r\n    checkAnswerButton: '检查答案',\r\n\r\n    playerWonText1: '你赢了恭喜！',\r\n    playerWonText2: '刮刮卡查看您的奖励',\r\n    claimCoinsButton: '索取硬币',\r\n\r\n    gameOver: '游戏结束！',\r\n    tryAgainButton: '再试一次',\r\n  },\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { createRandomNumber, createRandomOperator } from '../../services/functions';\r\nimport languages from '../../db/Languages';\r\nimport './HomePage.css';\r\n\r\nfunction HomePage({ language, setLanguage }) {\r\n  console.log('languages plik JS', languages);\r\n  console.log('state language', language);\r\n  console.log('combined to object key', languages[language].title);\r\n  const { title, subtitle, instruction, startButton } = languages[language];\r\n  return (\r\n    <div className=\"homePage-container\">\r\n\r\n      <div className=\"header\">\r\n        <button className=\"flag-btn\" onClick={() => setLanguage('en')}><span className=\"flag-icon flag-icon-us flag-icon-squared\" /></button>\r\n        <button className=\"flag-btn\" onClick={() => setLanguage('pl')}><span className=\"flag-icon flag-icon-pl flag-icon-squared\" /></button>\r\n        <button className=\"flag-btn\" onClick={() => setLanguage('cn')}><span className=\"flag-icon flag-icon-cn flag-icon-squared\" /></button>\r\n\r\n        <div className=\"curveNumber-container-33\">\r\n          <p className=\"number\">{createRandomNumber(1000)} {createRandomOperator()} {createRandomNumber(1000)}</p>\r\n        </div>\r\n        <div className=\"curveNumber-container-negative-22\">\r\n          <p className=\"number\">{createRandomNumber(1000)} {createRandomOperator()} {createRandomNumber(1000)}</p>\r\n        </div>\r\n        <div className=\"curveNumber-container-55\">\r\n          <p className=\"number\">{createRandomNumber(1000)} {createRandomOperator()} {createRandomNumber(1000)}</p>\r\n        </div>\r\n        <div className=\"curveNumber-container-33\">\r\n          <p className=\"number\">{createRandomNumber(1000)} {createRandomOperator()} {createRandomNumber(1000)}</p>\r\n        </div>\r\n        <div className=\"curveNumber-container-negative-22\">\r\n          <p className=\"number\">{createRandomNumber(1000)} {createRandomOperator()} {createRandomNumber(1000)}</p>\r\n        </div>\r\n        <div className=\"curveNumber-container-22\">\r\n          <p className=\"number\">{createRandomNumber(1000)} {createRandomOperator()} {createRandomNumber(1000)}</p>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"title\">\r\n\r\n        <div className=\"curveNumber-container-55\">\r\n          <p className=\"number\">{createRandomNumber(1000)} {createRandomOperator()} {createRandomNumber(1000)}</p>\r\n        </div>\r\n\r\n        <h1>{title}</h1>\r\n\r\n        <div className=\"curveNumber-container-55\">\r\n          <p className=\"number\">{createRandomNumber(1000)} {createRandomOperator()} {createRandomNumber(1000)}</p>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"title\">\r\n\r\n        <div className=\"curveNumber-container-22\">\r\n          <p className=\"number\">{createRandomNumber(1000)} {createRandomOperator()} {createRandomNumber(1000)}</p>\r\n        </div>\r\n        <div className=\"curveNumber-container-negative-55\">\r\n          <p className=\"number\">{createRandomNumber(1000)} {createRandomOperator()} {createRandomNumber(1000)}</p>\r\n        </div>\r\n\r\n        <h2>{subtitle}</h2>\r\n\r\n        <div className=\"curveNumber-container-22\">\r\n          <p className=\"number\">{createRandomNumber(1000)} {createRandomOperator()} {createRandomNumber(1000)}</p>\r\n        </div>\r\n        <div className=\"curveNumber-container-negative-55\">\r\n          <p className=\"number\">{createRandomNumber(1000)} {createRandomOperator()} {createRandomNumber(1000)}</p>\r\n        </div>\r\n\r\n      </div>    \r\n\r\n      <div className=\"rules\">\r\n\r\n        <p className=\"instruction\">\r\n          {instruction}\r\n        </p>\r\n\r\n      </div>\r\n\r\n      <div className=\"footer\">\r\n\r\n        <div className=\"curveNumber-container-22\">\r\n          <p className=\"number\">{createRandomNumber(1000)} {createRandomOperator()} {createRandomNumber(1000)}</p>\r\n        </div>\r\n        <div className=\"curveNumber-container-negative-55\">\r\n          <p className=\"number\">{createRandomNumber(1000)} {createRandomOperator()} {createRandomNumber(1000)}</p>\r\n        </div>\r\n\r\n        <Link to=\"/game\" className=\"pixel-button-homepage\"><p>{startButton}</p></Link>\r\n\r\n        <div className=\"curveNumber-container-33\">\r\n          <p className=\"number\">{createRandomNumber(1000)} {createRandomOperator()} {createRandomNumber(1000)}</p>\r\n        </div>\r\n        <div className=\"curveNumber-container-negative-33\">\r\n          <p className=\"number\">{createRandomNumber(1000)} {createRandomOperator()} {createRandomNumber(1000)}</p>\r\n        </div>\r\n    \r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: uuidv4(),\r\n    level: 1,\r\n    value: 5 * 6 + 100,\r\n    content: '5 * 6 + 100',\r\n    completed: false,\r\n    points: 300,\r\n    price: 0,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    level: 1,\r\n    value: 1 + 1 + 100,\r\n    content: '1 + 1 + 100',\r\n    completed: false,\r\n    points: 500,\r\n    price: 0,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    level: 1,\r\n    value: 2 + 5 + 100,\r\n    content: '2 + 5 + 100',\r\n    completed: false,\r\n    points: 400,\r\n    price: 0,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    level: 1,\r\n    value: 3 + 3 + 300,\r\n    content: '3 + 3 + 300',\r\n    completed: false,\r\n    points: 400,\r\n    price: 0,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    level: 1,\r\n    value: (120 - 100) + 5,\r\n    content: '(120 - 100) + 5',\r\n    completed: false,\r\n    points: 400,\r\n    price: 0,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    level: 1,\r\n    value: 5 + 6 + 200,\r\n    content: '5 + 6 + 200',\r\n    completed: false,\r\n    points: 500,\r\n    price: 0,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    level: 2,\r\n    value: 1 * 4 * 6 + 120,\r\n    content: '1 * 4 * 6 + 120',\r\n    completed: false,\r\n    points: 700,\r\n    price: 0,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    level: 2,\r\n    value: 500 + 200 + (5 + 5),\r\n    content: '500 + 200 + (5 + 5)',\r\n    completed: false,\r\n    points: 400,\r\n    price: 0,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    level: 2,\r\n    value: 200 + 120 - 20 + 1000,\r\n    content: '200 + 120 - 20 + 1000',\r\n    completed: false,\r\n    points: 1000,\r\n    price: 0,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    level: 2,\r\n    value: 500 * 2 + (3 * 2),\r\n    content: '500 * 2 + (3 * 2)',\r\n    completed: true,\r\n    points: 500,\r\n    price: 1,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    level: 2,\r\n    value: 777 + 333,\r\n    content: '777 + 333',\r\n    completed: true,\r\n    points: 500,\r\n    price: 1,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    level: 3,\r\n    value: 5 + 5 + 5 * 2 * 3,\r\n    content: '5 + 5 + 5 * 2 * 3',\r\n    completed: false,\r\n    points: 700,\r\n    price: 2,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    level: 3,\r\n    value: 111 + 222 + 333 + 444,\r\n    content: '111 + 222 + 333 + 444',\r\n    completed: false,\r\n    points: 1000,\r\n    price: 3,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    level: 3,\r\n    value: 5 * 2 + (5 * 4 + 2),\r\n    content: '5 * 2 + (5 * 4 + 2)',\r\n    completed: false,\r\n    points: 500,\r\n    price: 3,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    level: 3,\r\n    value: 1000 - 950 + 30 + 33,\r\n    content: '1000 - 950 + 30 + 33',\r\n    completed: false,\r\n    points: 900,\r\n    price: 3,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    level: 2,\r\n    value: 500 * 2 + 2000,\r\n    content: '500 * 2 + 2000',\r\n    completed: false,\r\n    points: 700,\r\n    price: 3,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    level: 3,\r\n    value: 2 + 3,\r\n    content: '2 + 3',\r\n    completed: false,\r\n    points: 1000,\r\n    price: 5,\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    level: 1,\r\n    value: 1 + 1,\r\n    content: '1 + 1',\r\n    completed: false,\r\n    points: 1000,\r\n    price: 5,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport './ScoreBoard.css';\r\nimport languages from '../../../db/Languages';\r\n\r\nfunction ScoreBoard(props) {\r\n  const { userScore, language } = props;\r\n  console.log('lang', language);\r\n  return (\r\n    <p>{languages[language].playerScore}: {userScore}</p>\r\n  );\r\n}\r\n\r\nexport default ScoreBoard;\r\n","import React from 'react';\r\nimport './Timer.css';\r\nimport languages from '../../../db/Languages';\r\n\r\nfunction Timer({ time, language }) {\r\n  const lastSeconds = time >= 10;\r\n  return (\r\n    <p className={lastSeconds ? 'timer-green' : 'timer-red'}>{languages[language].timer}: {time}</p>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React from 'react';\r\nimport './SingleRiddle.css';\r\nimport db from '../../../db/RiddleDB';\r\n\r\nfunction SingleRiddle({ \r\n  points,\r\n  content,\r\n  id,\r\n  setSelectedRiddle,\r\n  selectedRiddle,\r\n  setTimerStart,\r\n  price,\r\n  currentCoins,\r\n}) {\r\n  const handleClick = (itemID) => {\r\n    if (currentCoins < price) return;\r\n    setTimerStart(true);\r\n    const choosenRiddle = db.filter((singleRiddle) => singleRiddle.id === itemID);\r\n    setSelectedRiddle({ ...selectedRiddle, value: choosenRiddle[0].value, content: choosenRiddle[0].content, points: choosenRiddle[0].points, completed: choosenRiddle[0].completed, id: choosenRiddle[0].id });\r\n  };\r\n\r\n  return (\r\n    <div className={`riddle-container ${currentCoins < price ? 'disabled' : null}`} tabIndex={0} role=\"button\" onClick={() => handleClick(id)} onKeyDown={(event) => console.log('event', event)}>\r\n      <p>{content}</p>\r\n      <div className=\"border\">\r\n        <p>{points}pts</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleRiddle;\r\n","import React from 'react';\r\nimport SingleRiddle from '../SingleRiddle/SingleRiddle';\r\n\r\nfunction RiddleList({ currentCoins, riddleListData, setSelectedRiddle, selectedRiddle, setTimerPaused, setTimerStart }) {\r\n  const unfinishedRiddles = riddleListData.filter((riddle) => !riddle.completed);\r\n  return (\r\n    <div className=\"riddleList-container\">\r\n      {unfinishedRiddles.map((riddleFromDB) => <SingleRiddle currentCoins={currentCoins} {...riddleFromDB} key={riddleFromDB.id} setTimerStart={setTimerStart} setSelectedRiddle={setSelectedRiddle} selectedRiddle={selectedRiddle} setTimerPaused={setTimerPaused} />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RiddleList;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './Lives.css';\r\n\r\nfunction Lives({ userLives }) {\r\n  const livesNumberArrayForm = new Array(userLives).fill(0);\r\n  return ( \r\n    <div className=\"lives-container\">\r\n      {livesNumberArrayForm.map(() => <div className=\"pixelized--heart\" key={uuidv4()} />) }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Lives;\r\n","import React from 'react';\r\nimport './Counter.css';\r\n\r\nfunction Counter({ index, answer, setAnswer }) {\r\n  const increment = (number) => {\r\n    setAnswer(answer.map((x, i) => {\r\n      if (i === number && x < 9) {\r\n        return x + 1;\r\n      }\r\n      return x;\r\n    }));\r\n  };\r\n\r\n  const decrement = (number) => {\r\n    setAnswer(answer.map((x, i) => {\r\n      if (i === number && x >= 1) {\r\n        return x - 1;\r\n      }\r\n      return x;\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"counter-container\">\r\n      <button type=\"button\" onClick={() => increment(index)} className=\"btn-increment\">+</button>\r\n      <p>{answer[index]}</p>\r\n      <button type=\"button\" onClick={() => decrement(index)} className=\"btn-decrement\">-</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n","import React, { useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n// import LockOpenSharpIcon from '@material-ui/icons/LockOpenSharp';\r\nimport LockSharpIcon from '@material-ui/icons/LockSharp';\r\n\r\nimport Counter from '../Counter/Counter';\r\nimport { parseNumberToArray } from '../../../services/functions';\r\nimport './UserAnswer.css';\r\n\r\nfunction UserAnswer({ selectedRiddle, answer, setAnswer }) {\r\n  const inputNumber = parseNumberToArray(selectedRiddle.value);\r\n  useEffect(() => {\r\n    setAnswer(new Array(inputNumber.length).fill(0));\r\n  }, [selectedRiddle]);\r\n  return (\r\n    <div className=\"user-answer-container\">\r\n      {selectedRiddle.id === '' && <LockSharpIcon style={{ fontSize: 130 }} />}\r\n\r\n      {inputNumber.map((x, index) => <Counter key={uuidv4()} index={index} answer={answer} setAnswer={setAnswer} />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserAnswer;\r\n","import React from 'react';\r\nimport './RiddleContent.css';\r\n\r\nfunction RiddleContent({ selectedRiddle }) {\r\n  return (\r\n    <div className=\"riddle-content-container\">\r\n      <h3>{selectedRiddle.content}</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RiddleContent;\r\n","import React from 'react';\r\nimport './ProgressBar.css';\r\n\r\nfunction ProgressBar(props) {\r\n  const { userScore } = props;\r\n  return (\r\n    <div className=\"progress-bar\">\r\n      <div className=\"filler\" style={{ width: `${userScore / 10}%` }} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport List from '../../db/RiddleDB';\r\nimport languages from '../../db/Languages';\r\n\r\nimport ScoreBoard from './ScoreBoard/ScoreBoard';\r\nimport Timer from './Timer/Timer';\r\nimport RiddleList from './RiddleList/RiddleList';\r\nimport Lives from './Lives/Lives';\r\nimport UserAnswer from './UserAnswer/UserAnswer';\r\nimport RiddleContent from './RiddleContent/RiddleContent';\r\nimport ProgressBar from './ProgressBar/ProgressBar';\r\n\r\nimport { parseArrayToNumber } from '../../services/functions';\r\n\r\nimport './Game.css';\r\n\r\nfunction Game({ coins, language }) {\r\n  const defaulRiddleState = {\r\n    id: '',\r\n    level: 0,\r\n    value: '',\r\n    content: languages[language].altRiddleText,\r\n    completed: false,\r\n    points: 0,\r\n  };\r\n  const [userScore, setScore] = useState(0);\r\n  const [userLives, setUserLives] = useState(3);\r\n  const [timerStart, setTimerStart] = useState(false);\r\n  const [time, setTime] = useState(2000);\r\n  const [riddleListVisible, setRiddleListVisibility] = useState(false);\r\n  const [riddleListData, setRiddleListData] = useState(List);\r\n  const [selectedRiddle, setSelectedRiddle] = useState(defaulRiddleState);\r\n  const [answer, setAnswer] = useState([]);\r\n\r\n  const { coinsCollected, progressBar, showRiddleListButton, hideRiddleListButton, checkAnswerButton } = languages[language];\r\n\r\n  const history = useHistory();\r\n\r\n  const showRiddleList = () => {\r\n    setRiddleListVisibility(true);\r\n    document.getElementsByClassName('game-board')[0].style.marginLeft = '600px';\r\n  };\r\n\r\n  const hideRiddleList = () => {\r\n    setRiddleListVisibility(false);\r\n    document.getElementsByClassName('game-board')[0].style.marginLeft = '0px';\r\n  };\r\n\r\n  const checkAnswer = (userAnswer, choosenRiddle) => {\r\n    if (!timerStart) return;\r\n    const parsedUserAnswer = parseArrayToNumber(userAnswer);\r\n    if (parsedUserAnswer === choosenRiddle.value) { \r\n      setTime(time + 10); \r\n      setScore(userScore + choosenRiddle.points); \r\n      const specificRiddle = List.filter((x) => choosenRiddle.id === x.id);\r\n      specificRiddle[0].completed = true;\r\n      setRiddleListData(List.filter((singleRiddle) => !singleRiddle.completed));\r\n      setAnswer([]);\r\n      setSelectedRiddle(defaulRiddleState);\r\n      selectedRiddle.value = '';\r\n      selectedRiddle.content = 'choose riddle from riddle list';\r\n      setTimerStart(false);\r\n    } else {\r\n      setUserLives(userLives - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!timerStart) {\r\n      return null;\r\n    }\r\n    const interval = setInterval(() => {\r\n      setTime((time) => time - 1); \r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [timerStart]);\r\n\r\n  if (time === 0) {\r\n    setTime(null);\r\n    setUserLives(0);\r\n  }\r\n\r\n  if (userLives === 0) {\r\n    history.push('/gameover');\r\n  }\r\n\r\n  if (userScore >= 1000) {\r\n    history.push('/reward');\r\n  }\r\n\r\n  console.log('game UI renders');\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <div className=\"game-board\">\r\n        <div className=\"game-board-header\">\r\n          <div className=\"game-board-header-numbers\">\r\n            <p>{coinsCollected}: {coins}</p>\r\n            <ScoreBoard language={language} userScore={userScore} />\r\n            <p>{progressBar}</p>\r\n            <ProgressBar userScore={userScore} />\r\n            <Timer language={language} time={time} setTime={setTime} />\r\n          </div>\r\n          <div className=\"game-board-header-icons\">\r\n            <Lives userLives={userLives} />\r\n          </div>\r\n        </div>\r\n        \r\n        <RiddleContent selectedRiddle={selectedRiddle} />\r\n        <UserAnswer setAnswer={setAnswer} answer={answer} selectedRiddle={selectedRiddle} />\r\n        {riddleListVisible ? \r\n          (\r\n            <div className=\"pixeled-button-game\" tabIndex={0} role=\"button\" onClick={hideRiddleList} onKeyDown={hideRiddleList}>\r\n              <p>{hideRiddleListButton}</p>\r\n            </div>\r\n          ) :\r\n          (\r\n            <div className=\"pixeled-button-game\" tabIndex={0} role=\"button\" onClick={showRiddleList} onKeyDown={showRiddleList}>\r\n              <p>{showRiddleListButton}</p>\r\n            </div>\r\n          )}\r\n        <div className={`pixeled-button-game ${!timerStart ? 'disabled' : null}`} tabIndex={0} role=\"button\" onClick={() => checkAnswer(answer, selectedRiddle)} onKeyDown={() => checkAnswer(answer, selectedRiddle)}>\r\n          <p>{checkAnswerButton}</p>\r\n        </div>\r\n      </div>\r\n      <div className={`side-bar-${riddleListVisible ? 'visible' : 'hidden'}`}>\r\n        <RiddleList currentCoins={coins} setTimerStart={setTimerStart} setSelectedRiddle={setSelectedRiddle} selectedRiddle={selectedRiddle} riddleListData={riddleListData} setRiddleListData={setRiddleListData} />\r\n      </div>\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Canvas.css';\r\nimport '../HomePage/HomePage.css';\r\nimport '../Game/Game.css';\r\nimport languages from '../../db/Languages';\r\n\r\nfunction Canvas({ coinReward, setCoins, coinStatus, language }) {\r\n  const canvasRef = useRef(null);\r\n  const history = useHistory();\r\n\r\n  const claimReward = () => {\r\n    setCoins(coinStatus + coinReward);\r\n    history.push('/game');\r\n  };\r\n\r\n  const draw = (e, context) => {\r\n    if (e.buttons !== 1 || e.which !== 1) { return; }\r\n    context.beginPath();\r\n    context.clearRect(e.offsetX, e.offsetY, 30, 30);\r\n    context.stroke();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.addEventListener('mousemove', (event) => draw(event, ctx));\r\n  }, [draw]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.fillStyle = '#d3d3d3';\r\n    ctx.fillRect(0, 0, 300, 300);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={canvasRef} width=\"300px\" height=\"300px\" />\r\n      <div className=\"pixeled-button-game\" tabIndex={0} role=\"button\" onClick={() => claimReward()} onKeyDown={() => claimReward()}>\r\n        <p>{languages[language].claimCoinsButton}</p>\r\n      </div> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Canvas from './Canvas';\r\nimport { createRandomNumber } from '../../services/functions';\r\nimport languages from '../../db/Languages';\r\nimport './Reward.css';\r\n\r\nfunction Reward({ setCoins, coinStatus, language }) {\r\n  const [number, setNumber] = useState();\r\n  const { playerWonText1, playerWonText2 } = languages[language];\r\n\r\n  useEffect(() => {\r\n    switch (createRandomNumber(10)) {\r\n      case 0:\r\n        setNumber(1);\r\n        break;\r\n      case 1:\r\n        setNumber(1);\r\n        break;\r\n      case 2:\r\n        setNumber(1);\r\n        break;\r\n      case 3:\r\n        setNumber(1);\r\n        break;\r\n      case 4:\r\n        setNumber(1);\r\n        break;\r\n      case 5:\r\n        setNumber(1);\r\n        break;\r\n      case 6:\r\n        setNumber(3);\r\n        break;\r\n      case 7:\r\n        setNumber(3);\r\n        break;\r\n      case 8:\r\n        setNumber(3);\r\n        break;\r\n      case 9:\r\n        setNumber(10);\r\n        break;\r\n      default:\r\n        setNumber(1);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"reward-container\">\r\n      <p>{playerWonText1}</p>\r\n      <p>{playerWonText2}</p>\r\n      <div className={`scratch-card image${number}`}>\r\n        <Canvas language={language} coinStatus={coinStatus} coinReward={number} setCoins={setCoins} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reward;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport languages from '../../db/Languages';\r\n\r\nimport './GameOver.css';\r\nimport '../HomePage/HomePage.css';\r\n\r\nfunction GameOver({ language }) {\r\n  const { gameOver, tryAgainButton } = languages[language];\r\n  return (\r\n    <div className=\"game-over-container\">\r\n      <p>{gameOver}</p>\r\n      <Link className=\"pixel-button-homepage\" to=\"/\"><p>{tryAgainButton}</p></Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameOver;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\n\r\nimport HomePage from './components/HomePage/HomePage';\r\nimport Game from './components/Game/Game';\r\nimport Reward from './components/Reward/Reward';\r\nimport GameOver from './components/GameOver/GameOver';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [coins, setCoins] = useState(0);\r\n  const [language, setLanguage] = useState('en');\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <HomePage setLanguage={setLanguage} language={language} />\r\n          </Route>\r\n          <Route path=\"/game\">\r\n            <Game language={language} coins={coins} />\r\n          </Route>\r\n          <Route path=\"/reward\">\r\n            <Reward language={language} coinStatus={coins} setCoins={setCoins} />\r\n          </Route>\r\n          <Route path=\"/gameover\">\r\n            <GameOver language={language} />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then((\r\n      {\r\n        getCLS,\r\n        getFID,\r\n        getFCP,\r\n        getLCP,\r\n        getTTFB,\r\n      },\r\n    ) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}